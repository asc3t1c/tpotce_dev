#0 building with "mybuilder" instance using docker-container driver

#1 [nginx internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.18kB 0.0s done
#1 DONE 0.0s

#2 [nginx linux/arm64 internal] load metadata for docker.io/library/alpine:3.20
#2 DONE 0.5s

#3 [nginx linux/amd64 internal] load metadata for docker.io/library/alpine:3.20
#3 DONE 0.5s

#4 [nginx linux/amd64 builder 1/7] FROM docker.io/library/alpine:3.20@sha256:31687a2fdd021f85955bf2d0c2682e9c0949827560e1db546358ea094f740f12
#4 resolve docker.io/library/alpine:3.20@sha256:31687a2fdd021f85955bf2d0c2682e9c0949827560e1db546358ea094f740f12 0.0s done
#4 DONE 0.0s

#5 [nginx linux/arm64 builder 1/7] FROM docker.io/library/alpine:3.20@sha256:31687a2fdd021f85955bf2d0c2682e9c0949827560e1db546358ea094f740f12
#5 resolve docker.io/library/alpine:3.20@sha256:31687a2fdd021f85955bf2d0c2682e9c0949827560e1db546358ea094f740f12 0.0s done
#5 DONE 0.0s

#6 [nginx internal] load .dockerignore
#6 transferring context: 2B 0.0s done
#6 DONE 0.0s

#7 [nginx internal] load build context
#7 transferring context: 11.23kB 0.1s done
#7 DONE 0.1s

#8 [nginx linux/arm64 2/3] COPY dist/ /root/dist/
#8 CACHED

#9 [nginx linux/arm64 3/3] RUN apk --no-cache -U upgrade &&     apk --no-cache -U add       nginx       nginx-mod-http-brotli       nginx-mod-http-headers-more       nginx-mod-http-lua &&     cp -R /root/dist/html/* /var/lib/nginx/html/ &&     cd /var/lib/nginx/html/esvue &&     tar xvfz esvue.tgz &&     rm esvue.tgz &&     cd /var/lib/nginx/html/cyberchef &&     tar xvfz cyberchef.tgz &&     rm cyberchef.tgz &&     chown root:www-data -R /var/lib/nginx/html &&     chmod 755 -R /var/lib/nginx/html &&     rm -rf /etc/nginx/conf.d/* /usr/share/nginx/html/* &&     mkdir -p /etc/nginx/conf.d &&     cp /root/dist/conf/nginx.conf /etc/nginx/ &&     cp -R /root/dist/conf/ssl /etc/nginx/ &&     cp /root/dist/conf/tpotweb.conf /etc/nginx/conf.d/ &&     cp /root/dist/conf/lsweb.conf /etc/nginx/conf.d/ &&     rm -rf /root/*            /var/cache/apk/*
#9 CACHED

#10 [nginx linux/amd64 2/3] COPY dist/ /root/dist/
#10 CACHED

#11 [nginx linux/amd64 3/3] RUN apk --no-cache -U upgrade &&     apk --no-cache -U add       nginx       nginx-mod-http-brotli       nginx-mod-http-headers-more       nginx-mod-http-lua &&     cp -R /root/dist/html/* /var/lib/nginx/html/ &&     cd /var/lib/nginx/html/esvue &&     tar xvfz esvue.tgz &&     rm esvue.tgz &&     cd /var/lib/nginx/html/cyberchef &&     tar xvfz cyberchef.tgz &&     rm cyberchef.tgz &&     chown root:www-data -R /var/lib/nginx/html &&     chmod 755 -R /var/lib/nginx/html &&     rm -rf /etc/nginx/conf.d/* /usr/share/nginx/html/* &&     mkdir -p /etc/nginx/conf.d &&     cp /root/dist/conf/nginx.conf /etc/nginx/ &&     cp -R /root/dist/conf/ssl /etc/nginx/ &&     cp /root/dist/conf/tpotweb.conf /etc/nginx/conf.d/ &&     cp /root/dist/conf/lsweb.conf /etc/nginx/conf.d/ &&     rm -rf /root/*            /var/cache/apk/*
#11 CACHED

#12 [nginx] exporting to image
#12 exporting layers done
#12 exporting manifest sha256:b4ab3c3de889c4453f722279ecbcc2939e2a52df5a5fe4c2e83bcc4672166f58 done
#12 exporting config sha256:a8030f2d8392685451a0b887c242070a8c4c89236ea6cab12ef0e7dd79ae27b7 done
#12 exporting attestation manifest sha256:848f7107eae40ed403f440dc24abc8cd2b96d14e39feffdd835a617f7839eef7 0.0s done
#12 exporting manifest sha256:329e0ca773f0861bfcd0466823b3b3d6dae172e774cfc171a52434382b48d9c8 done
#12 exporting config sha256:56abb4134ac956acfa0078c9c9050fd25f46eee5b90001a9f10234be37b6db17 done
#12 exporting attestation manifest sha256:470ed4822b4dc1f3efdf37862e71bf155c27b11439e2c071fd9d39d72166a685 0.0s done
#12 exporting manifest list sha256:0d64a9331d99bc01b969260fc83770cb484f9fab553df557bbc612d10978a4f4 0.0s done
#12 pushing layers
#12 ...

#13 [nginx auth] f0rc3ps/nginx:pull,push token for registry-1.docker.io
#13 DONE 0.0s

#12 [nginx] exporting to image
#12 pushing layers 6.1s done
#12 pushing manifest for docker.io/f0rc3ps/nginx:24.04.1@sha256:0d64a9331d99bc01b969260fc83770cb484f9fab553df557bbc612d10978a4f4
#12 pushing manifest for docker.io/f0rc3ps/nginx:24.04.1@sha256:0d64a9331d99bc01b969260fc83770cb484f9fab553df557bbc612d10978a4f4 7.2s done
#12 pushing layers
#12 ...

#14 [nginx auth] asc3t1c/nginx:pull,push token for ghcr.io
#14 DONE 0.0s

#12 [nginx] exporting to image
#12 pushing layers 2.6s done
#12 pushing manifest for ghcr.io/asc3t1c/nginx:24.04.1@sha256:0d64a9331d99bc01b969260fc83770cb484f9fab553df557bbc612d10978a4f4
#12 pushing manifest for ghcr.io/asc3t1c/nginx:24.04.1@sha256:0d64a9331d99bc01b969260fc83770cb484f9fab553df557bbc612d10978a4f4 2.2s done
#12 DONE 18.3s

#15 [nginx] resolving provenance for metadata file
#15 DONE 0.0s
