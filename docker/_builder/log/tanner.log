#0 building with "mybuilder" instance using docker-container driver

#1 [tanner internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.81kB 0.0s done
#1 DONE 0.0s

#2 [tanner linux/amd64 internal] load metadata for docker.io/library/alpine:3.17
#2 ...

#3 [tanner linux/arm64 internal] load metadata for docker.io/library/alpine:3.17
#3 DONE 0.4s

#2 [tanner linux/amd64 internal] load metadata for docker.io/library/alpine:3.17
#2 DONE 0.4s

#4 [tanner internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [tanner linux/arm64 1/4] FROM docker.io/library/alpine:3.17@sha256:8fc3dacfb6d69da8d44e42390de777e48577085db99aa4e4af35f483eb08b989
#5 resolve docker.io/library/alpine:3.17@sha256:8fc3dacfb6d69da8d44e42390de777e48577085db99aa4e4af35f483eb08b989 0.0s done
#5 DONE 0.0s

#6 [tanner linux/amd64 1/4] FROM docker.io/library/alpine:3.17@sha256:8fc3dacfb6d69da8d44e42390de777e48577085db99aa4e4af35f483eb08b989
#6 resolve docker.io/library/alpine:3.17@sha256:8fc3dacfb6d69da8d44e42390de777e48577085db99aa4e4af35f483eb08b989 0.0s done
#6 DONE 0.0s

#7 [tanner internal] load build context
#7 transferring context: 1.77kB 0.0s done
#7 DONE 0.0s

#8 [tanner linux/amd64 2/4] COPY dist/ /root/dist/
#8 CACHED

#9 [tanner linux/amd64 3/4] RUN apk --no-cache -U upgrade &&     apk --no-cache -U add 		build-base 		git 		libcap 		libffi-dev 		openssl-dev 		linux-headers 		py3-aiohttp 		py3-geoip2 		py3-jinja2 		py3-jwt 		py3-mako 		py3-mysqlclient 		py3-packaging 		py3-pip 		py3-redis 		py3-pycodestyle 		py3-setuptools 		py3-tornado 		py3-websocket-client 		py3-wheel 		py3-yaml 		py3-yarl 		python3 		python3-dev && 	git clone https://github.com/mushorg/tanner /opt/tanner &&     cd /opt/tanner/ &&     git checkout 245d628f4023e5462c7035e760a6b5eed0a33fbe &&     cp /root/dist/config.yaml /opt/tanner/tanner/data &&     cp /root/dist/requirements.txt . &&     pip3 install --no-cache-dir -r requirements.txt &&     python3 setup.py install &&     rm -rf .coveragerc            .git            .gitignore            .travis.yml            Tanner.egg-info            build            dist            docker            docs            requirements.txt            setup.py &&     cd / &&     addgroup -g 2000 tanner &&     adduser -S -s /bin/ash -u 2000 -D -g 2000 tanner &&     mkdir /var/log/tanner &&     chown -R tanner:tanner /opt/tanner /var/log/tanner &&     apk del --purge             build-base             git             libcap             libffi-dev             openssl-dev             linux-headers             python3-dev &&     rm -rf /root/*            /tmp/*            /var/tmp/*            /var/cache/apk/*            /opt/tanner/.git
#9 CACHED

#10 [tanner linux/amd64 4/4] WORKDIR /opt/tanner
#10 CACHED

#11 [tanner linux/arm64 2/4] COPY dist/ /root/dist/
#11 CACHED

#12 [tanner linux/arm64 3/4] RUN apk --no-cache -U upgrade &&     apk --no-cache -U add 		build-base 		git 		libcap 		libffi-dev 		openssl-dev 		linux-headers 		py3-aiohttp 		py3-geoip2 		py3-jinja2 		py3-jwt 		py3-mako 		py3-mysqlclient 		py3-packaging 		py3-pip 		py3-redis 		py3-pycodestyle 		py3-setuptools 		py3-tornado 		py3-websocket-client 		py3-wheel 		py3-yaml 		py3-yarl 		python3 		python3-dev && 	git clone https://github.com/mushorg/tanner /opt/tanner &&     cd /opt/tanner/ &&     git checkout 245d628f4023e5462c7035e760a6b5eed0a33fbe &&     cp /root/dist/config.yaml /opt/tanner/tanner/data &&     cp /root/dist/requirements.txt . &&     pip3 install --no-cache-dir -r requirements.txt &&     python3 setup.py install &&     rm -rf .coveragerc            .git            .gitignore            .travis.yml            Tanner.egg-info            build            dist            docker            docs            requirements.txt            setup.py &&     cd / &&     addgroup -g 2000 tanner &&     adduser -S -s /bin/ash -u 2000 -D -g 2000 tanner &&     mkdir /var/log/tanner &&     chown -R tanner:tanner /opt/tanner /var/log/tanner &&     apk del --purge             build-base             git             libcap             libffi-dev             openssl-dev             linux-headers             python3-dev &&     rm -rf /root/*            /tmp/*            /var/tmp/*            /var/cache/apk/*            /opt/tanner/.git
#12 CACHED

#13 [tanner linux/arm64 4/4] WORKDIR /opt/tanner
#13 CACHED

#14 [tanner] exporting to image
#14 exporting layers done
#14 exporting manifest sha256:788e6775becc576c1dfcdb1ed4dfb794e1b41cea080ebc147ab372a28bfd4dec 0.0s done
#14 exporting config sha256:641bae8e539c15f5ba9c9de73d5a8b9405ffea88b7f8bcca95c2af17a57d7133 done
#14 exporting attestation manifest sha256:56ce464e327416c4eb5a7f3080e6928c4c24b9582865fd8845c1d49944d86750 0.0s done
#14 exporting manifest sha256:544e9f41e6d329427e88f174e7123b9c7f6d02ca7ba6bc98bc3ad23910781fb2
#14 exporting manifest sha256:544e9f41e6d329427e88f174e7123b9c7f6d02ca7ba6bc98bc3ad23910781fb2 done
#14 exporting config sha256:a940b18d979ca6fe4e10e0889496729057e026e1dadaac7f0f16e6ad51610d7e 0.0s done
#14 exporting attestation manifest sha256:83f26ad7896abe6a867b403d31905a5a68fa091e8cc81b0d40d9cfa77143d16e 0.0s done
#14 exporting manifest list sha256:62fb164100582f1aa417a9d04f468b1f13de667fe59af967e93693784c96d58c 0.0s done
#14 pushing layers
#14 ...

#15 [tanner auth] f0rc3ps/tanner:pull,push token for registry-1.docker.io
#15 DONE 0.0s

#14 [tanner] exporting to image
#14 pushing layers 3.0s done
#14 pushing manifest for docker.io/f0rc3ps/tanner:24.04.1@sha256:62fb164100582f1aa417a9d04f468b1f13de667fe59af967e93693784c96d58c
#14 pushing manifest for docker.io/f0rc3ps/tanner:24.04.1@sha256:62fb164100582f1aa417a9d04f468b1f13de667fe59af967e93693784c96d58c 2.2s done
#14 ...

#16 [tanner auth] asc3t1c/tanner:pull,push token for ghcr.io
#16 DONE 0.0s

#14 [tanner] exporting to image
#14 pushing layers 2.2s done
#14 pushing manifest for ghcr.io/asc3t1c/tanner:24.04.1@sha256:62fb164100582f1aa417a9d04f468b1f13de667fe59af967e93693784c96d58c
#14 pushing manifest for ghcr.io/asc3t1c/tanner:24.04.1@sha256:62fb164100582f1aa417a9d04f468b1f13de667fe59af967e93693784c96d58c 1.7s done
#14 DONE 9.1s

#17 [tanner] resolving provenance for metadata file
#17 DONE 0.0s
